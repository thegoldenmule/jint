def msbuildAbsPath="C:/Windows/Microsoft.NET/Framework/v4.0.30319/MSBuild.exe"
def solutionRelPath="Master.sln"

def multiCopy = { sources, targets ->
	for (source in sources) {
		def sourceFile = new File(source)
		for (target in targets) {
			def targetFile = new File(target + '/' + sourceFile.name)
			if (targetFile.exists()) {
				targetFile.delete()
			}

			def targetDir = new File(targetFile.getParent())
			if (!targetDir.exists()) {
				targetDir.mkdirs()
			}
			
			targetFile << sourceFile.bytes
		}
	}
}

task buildAll {
	doLast { task ->
		
		// execute build
		exec {
			executable msbuildAbsPath
			args "/t:Clean,Build", solutionRelPath
		}

		// determine configuration
		def configuration = "Debug"
		if (task.project.hasProperty('configuration')) {
			configuration = task.project.configuration
		}

		def projects = [
			"Examples/Repl",
			"Examples/UQL",
			"Examples/MonoBehaviourScripting"]

		// copy each dll to each example project
		def sources = [
			"Jint/Jint/bin/$configuration/Jint.dll",
			"Jint/Jint/bin/$configuration/Jint.pdb",
			"Jint.Unity/bin/$configuration/Jint.Unity.dll",
			"Jint.Unity/bin/$configuration/Jint.Unity.pdb",
			"Jint.Ninject/bin/$configuration/Jint.Ninject.dll",
			"Jint.Ninject/bin/$configuration/Jint.Ninject.pdb"]
		def targets = projects.collect { it + "/Assets/Plugins" }
		multiCopy(sources, targets)
		
		// editor dlls
		sources = [
			"Jint.Unity.Editor/bin/$configuration/Jint.Unity.Editor.dll",
			"Jint.Unity.Editor/bin/$configuration/Jint.Unity.Editor.pdb"]
		targets = projects.collect { it + "/Assets/Plugins/Editor" }
		multiCopy(sources, targets)

		// copy common scripts to example project
		sources = []
		new File("CommonScripts").traverse(
			type: groovy.io.FileType.FILES,
			nameFilter: ~/.*\.html$/) {
				sources.add(it.getAbsolutePath())
			}
		targets = projects.collect { it + "/Assets/Resources" }
		multiCopy(sources, targets)
	}
}

task deployUnityUpgrade {
	doLast { task ->
		// TODO -- copy unity dlls into projects
	}
}